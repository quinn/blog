{"componentChunkName":"component---src-templates-blog-post-js","path":"/2014/04-19-log-nginx-to-stdout-and-stderr-when-run/","result":{"data":{"site":{"id":"Site","siteMetadata":{"title":"Quinn's Blog"}},"markdownRemark":{"id":"90882856-c1a3-5f1f-a0cc-490f1e3063f3","excerpt":"This is somewhat of a follow-up to this post: http://tastehoneyco.com/blog/running-nginx-in-the-foreground/ The instructions there are simple enough and it…","html":"<p>This is somewhat of a follow-up to this post:</p>\n<p><a href=\"http://tastehoneyco.com/blog/running-nginx-in-the-foreground/\">http://tastehoneyco.com/blog/running-nginx-in-the-foreground/</a></p>\n<p>The instructions there are simple enough and it works great, but no output is\nlogged while NGINX is running. This can be annoying if you like treating logs\nas streams rather than as something that ends up in a file on a (probably\ntransient) filesystem. Unfortunately there doesn’t seem to be a way to do this\nthrough the NGINX config, probably because it doesn’t fit with the typical\nNGINX paradigm (a service running in the background with master / worker\nprocesses). However, I want to do it anyway. I created a simple go script to\nhandle this:</p>\n<div class=\"gatsby-highlight\" data-language=\"go\"><pre class=\"language-go\"><code class=\"language-go\"><span class=\"token keyword\">package</span> main\n\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token string\">\"fmt\"</span>\n    <span class=\"token string\">\"os/exec\"</span>\n    <span class=\"token string\">\"os\"</span>\n    <span class=\"token string\">\"github.com/ActiveState/tail\"</span>\n<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">func</span> <span class=\"token function\">Nginx</span><span class=\"token punctuation\">(</span>c <span class=\"token keyword\">chan</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  pwd<span class=\"token punctuation\">,</span> <span class=\"token boolean\">_</span> <span class=\"token operator\">:=</span> os<span class=\"token punctuation\">.</span><span class=\"token function\">Getwd</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  conf   <span class=\"token operator\">:=</span> pwd <span class=\"token operator\">+</span> <span class=\"token string\">\"/nginx.conf\"</span>\n  cmd <span class=\"token operator\">:=</span> exec<span class=\"token punctuation\">.</span><span class=\"token function\">Command</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"nginx\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"-c\"</span><span class=\"token punctuation\">,</span> conf<span class=\"token punctuation\">)</span>\n  cmd<span class=\"token punctuation\">.</span>Stdout <span class=\"token operator\">=</span> os<span class=\"token punctuation\">.</span>Stdout\n  cmd<span class=\"token punctuation\">.</span>Stderr <span class=\"token operator\">=</span> os<span class=\"token punctuation\">.</span>Stderr\n  cmd<span class=\"token punctuation\">.</span><span class=\"token function\">Run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">func</span> <span class=\"token function\">AcessLog</span><span class=\"token punctuation\">(</span>c <span class=\"token keyword\">chan</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  t<span class=\"token punctuation\">,</span> <span class=\"token boolean\">_</span> <span class=\"token operator\">:=</span> tail<span class=\"token punctuation\">.</span><span class=\"token function\">TailFile</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/path/to/nginx/logs/nginx-access.log\"</span><span class=\"token punctuation\">,</span> tail<span class=\"token punctuation\">.</span>Config<span class=\"token punctuation\">{</span>Follow<span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token keyword\">for</span> line <span class=\"token operator\">:=</span> <span class=\"token keyword\">range</span> t<span class=\"token punctuation\">.</span>Lines <span class=\"token punctuation\">{</span>\n    fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span>line<span class=\"token punctuation\">.</span>Text<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">func</span> <span class=\"token function\">ErrorLog</span><span class=\"token punctuation\">(</span>c <span class=\"token keyword\">chan</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  t<span class=\"token punctuation\">,</span> <span class=\"token boolean\">_</span> <span class=\"token operator\">:=</span> tail<span class=\"token punctuation\">.</span><span class=\"token function\">TailFile</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/path/to/nginx/logs/nginx-error.log\"</span><span class=\"token punctuation\">,</span> tail<span class=\"token punctuation\">.</span>Config<span class=\"token punctuation\">{</span>Follow<span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token keyword\">for</span> line <span class=\"token operator\">:=</span> <span class=\"token keyword\">range</span> t<span class=\"token punctuation\">.</span>Lines <span class=\"token punctuation\">{</span>\n    fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Fprintln</span><span class=\"token punctuation\">(</span>os<span class=\"token punctuation\">.</span>Stderr<span class=\"token punctuation\">,</span> line<span class=\"token punctuation\">.</span>Text<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    c <span class=\"token operator\">:=</span> <span class=\"token function\">make</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">chan</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">go</span> <span class=\"token function\">Nginx</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">go</span> <span class=\"token function\">AcessLog</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">go</span> <span class=\"token function\">ErrorLog</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">)</span>\n\n    nginx  <span class=\"token operator\">:=</span> <span class=\"token operator\">&lt;-</span> c\n    access <span class=\"token operator\">:=</span> <span class=\"token operator\">&lt;-</span> c\n    <span class=\"token builtin\">error</span>  <span class=\"token operator\">:=</span> <span class=\"token operator\">&lt;-</span> c\n\n    fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span>nginx<span class=\"token punctuation\">)</span>\n    fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span>access<span class=\"token punctuation\">)</span>\n    fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">error</span><span class=\"token punctuation\">)</span>\n    fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"done.\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>All this is doing is setting up 3 goroutines, 1 for the nginx master process,\n1 for a tail of the error log which gets printed to STDERR, and 1 for the\naccess log which gets printed to STDOUT. This requires some additional config\nin the NGINX config:</p>\n<div class=\"gatsby-highlight\" data-language=\"nginx\"><pre class=\"language-nginx\"><code class=\"language-nginx\"><span class=\"token keyword\">worker_processes</span>  <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">daemon</span> off<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">events</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">worker_connections</span> <span class=\"token number\">1024</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">http</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">access_log</span> <span class=\"token operator\">/</span>path<span class=\"token operator\">/</span>to<span class=\"token operator\">/</span>nginx<span class=\"token operator\">/</span>logs<span class=\"token operator\">/</span>nginx<span class=\"token operator\">-</span>access<span class=\"token punctuation\">.</span>log<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">error_log</span>  <span class=\"token operator\">/</span>path<span class=\"token operator\">/</span>to<span class=\"token operator\">/</span>nginx<span class=\"token operator\">/</span>logs<span class=\"token operator\">/</span>nginx<span class=\"token operator\">-</span>error<span class=\"token punctuation\">.</span>log debug<span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">server</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">listen</span> <span class=\"token number\">8080</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>As you can see I’ve increased the log level to <code class=\"language-text\">debug</code> to get the maximum\namount of information from NGINX. That’s it! Try running the go script, and\nyou should see requests and errors showing up in the terminal as they are\nmade.</p>","fields":{"slug":"/2014/04-19-log-nginx-to-stdout-and-stderr-when-run/"},"frontmatter":{"title":"Log to STDOUT and STDERR when Running NGINX in the Foreground","date":"April 19, 2014","description":"I'm wrapping NGINX in a small go script to capture the output of the log files and pass them to STDOUT and STDERR. This is somewhat of a follow-up on my original post about running NGINX in the foreground.\n"}}},"pageContext":{"slug":"/2014/04-19-log-nginx-to-stdout-and-stderr-when-run/","previous":{"fields":{"slug":"/2014/04-14-postgresql-array-and-hstore-column-reference/"},"frontmatter":{"title":"Postgresql Array and Hstore Column Reference"}},"next":{"fields":{"slug":"/2014/08-12-iframe-communication/"},"frontmatter":{"title":"Facilitating Bidirectional Cross-Domain Communication with an Iframe"}}}}}