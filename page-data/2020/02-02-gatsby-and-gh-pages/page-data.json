{"componentChunkName":"component---src-templates-blog-post-js","path":"/2020/02-02-gatsby-and-gh-pages/","result":{"data":{"site":{"id":"Site","siteMetadata":{"title":"Quinn's Blog"}},"markdownRemark":{"id":"70983522-3327-526e-b58e-b91acb54d7a0","excerpt":"I’m putting down the steps I took to set this thing up before I forget. Install and run Gatsby init Recently, I decided to give this whole go directory…","html":"<p>I’m putting down the steps I took to set this thing up before I forget.</p>\n<h2>Install and run Gatsby init</h2>\n<p>Recently, I decided to give this whole go directory structure a try, so I made a dir for my personal stuff:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">mkdir</span> -p github.com/quinn\n<span class=\"token builtin class-name\">cd</span> <span class=\"token operator\">!</span>$</code></pre></div>\n<p>Next, I used the Gatsby Starter Blog found <a href=\"https://www.gatsbyjs.org/starters/gatsbyjs/gatsby-starter-blog/\">here</a>. To create a new Gatsby project using the template, run this command:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">gatsby new <span class=\"token variable\">$blog_folder_name_goes_here</span> <span class=\"token punctuation\">\\</span>\n  https://github.com/gatsbyjs/gatsby-starter-blog</code></pre></div>\n<p>Ok great, that probably worked. I then made a few customizations to the template but thats not really interesting nor relevant to this blog post. You can build your blog by running <code class=\"language-text\">yarn build</code>, this will use webpack to compile the blog’s content into the <code class=\"language-text\">public</code> directory in the project folder.</p>\n<h2>Deploy to Github Pages</h2>\n<p>In order to get this generated content onto github, you’ll need a repo, I created mine as open source at <a href=\"https://github.com/quinn/blog\">github.com/quinn/blog</a>. From here, you can use the <a href=\"https://github.com/tschaub/gh-pages\">gh-pages</a> tool to deploy to Github Pages for the repository you created, as described in <a href=\"https://www.gatsbyjs.org/docs/how-gatsby-works-with-github-pages/\">this tutorial on the Gatsby website</a>. While this works fine, I thought I’d see if I could get it to work with Github’s actions tool.</p>\n<h2>Setting up the Github Action</h2>\n<p>Here is my yaml file, in Literate Programming style:</p>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Publish\n<span class=\"token key atrule\">on</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>push<span class=\"token punctuation\">]</span>\n<span class=\"token key atrule\">jobs</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">build</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Publish\n    <span class=\"token key atrule\">runs-on</span><span class=\"token punctuation\">:</span> ubuntu<span class=\"token punctuation\">-</span>latest\n    steps<span class=\"token punctuation\">:</span></code></pre></div>\n<p>The first step is to “checkout” your repisitory. Most github actions start in this way.</p>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\">    <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Checkout\n      <span class=\"token key atrule\">uses</span><span class=\"token punctuation\">:</span> actions/checkout@v1</code></pre></div>\n<p>Since we are creating the build on github’s CI, it’ll need all of the (production) packages:</p>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\">    <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Install NPM Packages\n      <span class=\"token key atrule\">uses</span><span class=\"token punctuation\">:</span> borales/actions<span class=\"token punctuation\">-</span>yarn@v2.0.0\n      <span class=\"token key atrule\">with</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">cmd</span><span class=\"token punctuation\">:</span> install <span class=\"token punctuation\">-</span><span class=\"token punctuation\">-</span>production</code></pre></div>\n<p>Next we create the build. To enable Google Analytics, I’ve added the <code class=\"language-text\">GA_TRACKING_ID</code> env var and secret, and updated the <code class=\"language-text\">gatsby-config.js</code> to read from this env var. This doesn’t <em>really</em> need to be secret, but seemed cleaner this way.</p>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\">    <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Static Build\n      <span class=\"token key atrule\">uses</span><span class=\"token punctuation\">:</span> borales/actions<span class=\"token punctuation\">-</span>yarn@v2.0.0\n      <span class=\"token key atrule\">with</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">cmd</span><span class=\"token punctuation\">:</span> build\n      <span class=\"token key atrule\">env</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">GA_TRACKING_ID</span><span class=\"token punctuation\">:</span> $<span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> secrets.GA_TRACKING_ID <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n        <span class=\"token key atrule\">NODE_ENV</span><span class=\"token punctuation\">:</span> production</code></pre></div>\n<p>I’m using a custom hostname, so I needed to ensure that the <code class=\"language-text\">CNAME</code> file is present. Since the gh-pages uploader tool replaces everything in the <code class=\"language-text\">gh-pages</code> branch, this file needs to be created. And it needs to be created with <code class=\"language-text\">sudo</code> for some reason. I was getting a Permission Denied without it. Shrug.</p>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\">    <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Set CNAME\n      <span class=\"token key atrule\">run</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">|</span><span class=\"token scalar string\">\n        sudo tee -a public/CNAME > /dev/null &lt;&lt; EOF\n        quinnshanahan.com\n        EOF</span></code></pre></div>\n<p>The last step is to actually upload the contents of the <code class=\"language-text\">public</code> folder to the root of the <code class=\"language-text\">gh-pages</code> branch. I tried a different ways to do this on Github CI and this one was definitely the easiest. To work, you need to have a deploy key pair added to your repo with write access. The <a href=\"https://github.com/peaceiris/actions-gh-pages#getting-started\">README</a> for the action has all the information you’ll need on how to set this up.</p>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\">    <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Deploy\n      <span class=\"token key atrule\">uses</span><span class=\"token punctuation\">:</span> peaceiris/actions<span class=\"token punctuation\">-</span>gh<span class=\"token punctuation\">-</span>pages@v2\n      <span class=\"token key atrule\">env</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">ACTIONS_DEPLOY_KEY</span><span class=\"token punctuation\">:</span> $<span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> secrets.ACTIONS_DEPLOY_KEY <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n        <span class=\"token key atrule\">PUBLISH_BRANCH</span><span class=\"token punctuation\">:</span> gh<span class=\"token punctuation\">-</span>pages\n        <span class=\"token key atrule\">PUBLISH_DIR</span><span class=\"token punctuation\">:</span> ./public</code></pre></div>\n<p>And that should do it! You can see this <em>in action</em> (lol) for my blog here: <a href=\"https://github.com/quinn/blog/actions\">https://github.com/quinn/blog/actions</a>. Neat!</p>","frontmatter":{"title":"Create a Blog With Github Pages and Gatsby","date":"February 02, 2020","description":"I just setup a blog using Gatsby.js that publishes on push using github actions to github pages."}}},"pageContext":{"slug":"/2020/02-02-gatsby-and-gh-pages/","previous":{"fields":{"slug":"/new-beginnings/"},"frontmatter":{"title":"New Beginnings"}},"next":null}}}